local tracedoc = require("tracedoc")
local M = {}
local docs = {}

function string:split(delimiter)
    local result = { }
    local from  = 1
    local delim_from, delim_to = string.find( self, delimiter, from  )
    while delim_from do
        table.insert( result, string.sub( self, from , delim_from-1 ) )
        from  = delim_to + 1
        delim_from, delim_to = string.find( self, delimiter, from  )
    end
    table.insert( result, string.sub( self, from  ) )
    return result
  end

function M.new_doc(name, init)
    local doc = tracedoc.new(init)
    docs[name] = doc
    tracedoc.commit(doc, {})
    return doc
end

function M.release(name)
    docs[name] = nil
end

function M.get_doc(path)
    local splitpath = path:split(".")
    local node = docs

    for _,subpath in ipairs(splitpath) do
        node = docs[subpath]
    end

    return node
end

function M.fetch_all()
    local changes = {}
    for name,doc in pairs(docs) do
        local change = tracedoc.commit(doc, {}, name .. ".")
        changes[name] = change
    end

    return changes
end

return M